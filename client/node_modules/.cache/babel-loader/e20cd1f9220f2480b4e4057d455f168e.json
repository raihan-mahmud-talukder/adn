{"ast":null,"code":"'use strict';\n\nimport utils from './../utils.js';\nimport settle from './../core/settle.js';\nimport cookies from './../helpers/cookies.js';\nimport buildURL from './../helpers/buildURL.js';\nimport buildFullPath from '../core/buildFullPath.js';\nimport isURLSameOrigin from './../helpers/isURLSameOrigin.js';\nimport transitionalDefaults from '../defaults/transitional.js';\nimport AxiosError from '../core/AxiosError.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport parseProtocol from '../helpers/parseProtocol.js';\nimport platform from '../platform/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport speedometer from '../helpers/speedometer.js';\n\nfunction progressEventReducer(listener, isDownloadStream) {\n  let bytesNotified = 0;\n\n  const _speedometer = speedometer(50, 250);\n\n  return e => {\n    const loaded = e.loaded;\n    const total = e.lengthComputable ? e.total : undefined;\n    const progressBytes = loaded - bytesNotified;\n\n    const rate = _speedometer(progressBytes);\n\n    const inRange = loaded <= total;\n    bytesNotified = loaded;\n    const data = {\n      loaded,\n      total,\n      progress: total ? loaded / total : undefined,\n      bytes: progressBytes,\n      rate: rate ? rate : undefined,\n      estimated: rate && total && inRange ? (total - loaded) / rate : undefined,\n      event: e\n    };\n    data[isDownloadStream ? 'download' : 'upload'] = true;\n    listener(data);\n  };\n}\n\nconst isXHRAdapterSupported = typeof XMLHttpRequest !== 'undefined';\nexport default isXHRAdapterSupported && function (config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    let requestData = config.data;\n    const requestHeaders = AxiosHeaders.from(config.headers).normalize();\n    const responseType = config.responseType;\n    let onCanceled;\n\n    function done() {\n      if (config.cancelToken) {\n        config.cancelToken.unsubscribe(onCanceled);\n      }\n\n      if (config.signal) {\n        config.signal.removeEventListener('abort', onCanceled);\n      }\n    }\n\n    let contentType;\n\n    if (utils.isFormData(requestData)) {\n      if (platform.isStandardBrowserEnv || platform.isStandardBrowserWebWorkerEnv) {\n        requestHeaders.setContentType(false); // Let the browser set it\n      } else if (!requestHeaders.getContentType(/^\\s*multipart\\/form-data/)) {\n        requestHeaders.setContentType('multipart/form-data'); // mobile/desktop app frameworks\n      } else if (utils.isString(contentType = requestHeaders.getContentType())) {\n        // fix semicolon duplication issue for ReactNative FormData implementation\n        requestHeaders.setContentType(contentType.replace(/^\\s*(multipart\\/form-data);+/, '$1'));\n      }\n    }\n\n    let request = new XMLHttpRequest(); // HTTP basic authentication\n\n    if (config.auth) {\n      const username = config.auth.username || '';\n      const password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.set('Authorization', 'Basic ' + btoa(username + ':' + password));\n    }\n\n    const fullPath = buildFullPath(config.baseURL, config.url);\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true); // Set the request timeout in MS\n\n    request.timeout = config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      } // Prepare the response\n\n\n      const responseHeaders = AxiosHeaders.from('getAllResponseHeaders' in request && request.getAllResponseHeaders());\n      const responseData = !responseType || responseType === 'text' || responseType === 'json' ? request.responseText : request.response;\n      const response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config,\n        request\n      };\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response); // Clean up request\n\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        } // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n\n\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        } // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n\n\n        setTimeout(onloadend);\n      };\n    } // Handle browser request cancellation (as opposed to a manual cancellation)\n\n\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, config, request)); // Clean up request\n\n      request = null;\n    }; // Handle low level network errors\n\n\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request)); // Clean up request\n\n      request = null;\n    }; // Handle timeout\n\n\n    request.ontimeout = function handleTimeout() {\n      let timeoutErrorMessage = config.timeout ? 'timeout of ' + config.timeout + 'ms exceeded' : 'timeout exceeded';\n      const transitional = config.transitional || transitionalDefaults;\n\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n\n      reject(new AxiosError(timeoutErrorMessage, transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED, config, request)); // Clean up request\n\n      request = null;\n    }; // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n\n\n    if (platform.isStandardBrowserEnv) {\n      // Add xsrf header\n      // regarding CVE-2023-45857 config.withCredentials condition was removed temporarily\n      const xsrfValue = isURLSameOrigin(fullPath) && config.xsrfCookieName && cookies.read(config.xsrfCookieName);\n\n      if (xsrfValue) {\n        requestHeaders.set(config.xsrfHeaderName, xsrfValue);\n      }\n    } // Remove Content-Type if data is undefined\n\n\n    requestData === undefined && requestHeaders.setContentType(null); // Add headers to the request\n\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders.toJSON(), function setRequestHeader(val, key) {\n        request.setRequestHeader(key, val);\n      });\n    } // Add withCredentials to request if needed\n\n\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    } // Add responseType to request if needed\n\n\n    if (responseType && responseType !== 'json') {\n      request.responseType = config.responseType;\n    } // Handle progress if needed\n\n\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', progressEventReducer(config.onDownloadProgress, true));\n    } // Not all browsers support upload events\n\n\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', progressEventReducer(config.onUploadProgress));\n    }\n\n    if (config.cancelToken || config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = cancel => {\n        if (!request) {\n          return;\n        }\n\n        reject(!cancel || cancel.type ? new CanceledError(null, config, request) : cancel);\n        request.abort();\n        request = null;\n      };\n\n      config.cancelToken && config.cancelToken.subscribe(onCanceled);\n\n      if (config.signal) {\n        config.signal.aborted ? onCanceled() : config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    const protocol = parseProtocol(fullPath);\n\n    if (protocol && platform.protocols.indexOf(protocol) === -1) {\n      reject(new AxiosError('Unsupported protocol ' + protocol + ':', AxiosError.ERR_BAD_REQUEST, config));\n      return;\n    } // Send the request\n\n\n    request.send(requestData || null);\n  });\n};","map":{"version":3,"sources":["D:/Web Development/Project/adn/client/node_modules/axios/lib/adapters/xhr.js"],"names":["utils","settle","cookies","buildURL","buildFullPath","isURLSameOrigin","transitionalDefaults","AxiosError","CanceledError","parseProtocol","platform","AxiosHeaders","speedometer","progressEventReducer","listener","isDownloadStream","bytesNotified","_speedometer","e","loaded","total","lengthComputable","undefined","progressBytes","rate","inRange","data","progress","bytes","estimated","event","isXHRAdapterSupported","XMLHttpRequest","config","Promise","dispatchXhrRequest","resolve","reject","requestData","requestHeaders","from","headers","normalize","responseType","onCanceled","done","cancelToken","unsubscribe","signal","removeEventListener","contentType","isFormData","isStandardBrowserEnv","isStandardBrowserWebWorkerEnv","setContentType","getContentType","isString","replace","request","auth","username","password","unescape","encodeURIComponent","set","btoa","fullPath","baseURL","url","open","method","toUpperCase","params","paramsSerializer","timeout","onloadend","responseHeaders","getAllResponseHeaders","responseData","responseText","response","status","statusText","_resolve","value","_reject","err","onreadystatechange","handleLoad","readyState","responseURL","indexOf","setTimeout","onabort","handleAbort","ECONNABORTED","onerror","handleError","ERR_NETWORK","ontimeout","handleTimeout","timeoutErrorMessage","transitional","clarifyTimeoutError","ETIMEDOUT","xsrfValue","xsrfCookieName","read","xsrfHeaderName","forEach","toJSON","setRequestHeader","val","key","isUndefined","withCredentials","onDownloadProgress","addEventListener","onUploadProgress","upload","cancel","type","abort","subscribe","aborted","protocol","protocols","ERR_BAD_REQUEST","send"],"mappings":"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","sourcesContent":["'use strict';\r\n\r\nimport utils from './../utils.js';\r\nimport settle from './../core/settle.js';\r\nimport cookies from './../helpers/cookies.js';\r\nimport buildURL from './../helpers/buildURL.js';\r\nimport buildFullPath from '../core/buildFullPath.js';\r\nimport isURLSameOrigin from './../helpers/isURLSameOrigin.js';\r\nimport transitionalDefaults from '../defaults/transitional.js';\r\nimport AxiosError from '../core/AxiosError.js';\r\nimport CanceledError from '../cancel/CanceledError.js';\r\nimport parseProtocol from '../helpers/parseProtocol.js';\r\nimport platform from '../platform/index.js';\r\nimport AxiosHeaders from '../core/AxiosHeaders.js';\r\nimport speedometer from '../helpers/speedometer.js';\r\n\r\nfunction progressEventReducer(listener, isDownloadStream) {\r\n  let bytesNotified = 0;\r\n  const _speedometer = speedometer(50, 250);\r\n\r\n  return e => {\r\n    const loaded = e.loaded;\r\n    const total = e.lengthComputable ? e.total : undefined;\r\n    const progressBytes = loaded - bytesNotified;\r\n    const rate = _speedometer(progressBytes);\r\n    const inRange = loaded <= total;\r\n\r\n    bytesNotified = loaded;\r\n\r\n    const data = {\r\n      loaded,\r\n      total,\r\n      progress: total ? (loaded / total) : undefined,\r\n      bytes: progressBytes,\r\n      rate: rate ? rate : undefined,\r\n      estimated: rate && total && inRange ? (total - loaded) / rate : undefined,\r\n      event: e\r\n    };\r\n\r\n    data[isDownloadStream ? 'download' : 'upload'] = true;\r\n\r\n    listener(data);\r\n  };\r\n}\r\n\r\nconst isXHRAdapterSupported = typeof XMLHttpRequest !== 'undefined';\r\n\r\nexport default isXHRAdapterSupported && function (config) {\r\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\r\n    let requestData = config.data;\r\n    const requestHeaders = AxiosHeaders.from(config.headers).normalize();\r\n    const responseType = config.responseType;\r\n    let onCanceled;\r\n    function done() {\r\n      if (config.cancelToken) {\r\n        config.cancelToken.unsubscribe(onCanceled);\r\n      }\r\n\r\n      if (config.signal) {\r\n        config.signal.removeEventListener('abort', onCanceled);\r\n      }\r\n    }\r\n\r\n    let contentType;\r\n\r\n    if (utils.isFormData(requestData)) {\r\n      if (platform.isStandardBrowserEnv || platform.isStandardBrowserWebWorkerEnv) {\r\n        requestHeaders.setContentType(false); // Let the browser set it\r\n      } else if(!requestHeaders.getContentType(/^\\s*multipart\\/form-data/)){\r\n        requestHeaders.setContentType('multipart/form-data'); // mobile/desktop app frameworks\r\n      } else if(utils.isString(contentType = requestHeaders.getContentType())){\r\n        // fix semicolon duplication issue for ReactNative FormData implementation\r\n        requestHeaders.setContentType(contentType.replace(/^\\s*(multipart\\/form-data);+/, '$1'))\r\n      }\r\n    }\r\n\r\n    let request = new XMLHttpRequest();\r\n\r\n    // HTTP basic authentication\r\n    if (config.auth) {\r\n      const username = config.auth.username || '';\r\n      const password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\r\n      requestHeaders.set('Authorization', 'Basic ' + btoa(username + ':' + password));\r\n    }\r\n\r\n    const fullPath = buildFullPath(config.baseURL, config.url);\r\n\r\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\r\n\r\n    // Set the request timeout in MS\r\n    request.timeout = config.timeout;\r\n\r\n    function onloadend() {\r\n      if (!request) {\r\n        return;\r\n      }\r\n      // Prepare the response\r\n      const responseHeaders = AxiosHeaders.from(\r\n        'getAllResponseHeaders' in request && request.getAllResponseHeaders()\r\n      );\r\n      const responseData = !responseType || responseType === 'text' || responseType === 'json' ?\r\n        request.responseText : request.response;\r\n      const response = {\r\n        data: responseData,\r\n        status: request.status,\r\n        statusText: request.statusText,\r\n        headers: responseHeaders,\r\n        config,\r\n        request\r\n      };\r\n\r\n      settle(function _resolve(value) {\r\n        resolve(value);\r\n        done();\r\n      }, function _reject(err) {\r\n        reject(err);\r\n        done();\r\n      }, response);\r\n\r\n      // Clean up request\r\n      request = null;\r\n    }\r\n\r\n    if ('onloadend' in request) {\r\n      // Use onloadend if available\r\n      request.onloadend = onloadend;\r\n    } else {\r\n      // Listen for ready state to emulate onloadend\r\n      request.onreadystatechange = function handleLoad() {\r\n        if (!request || request.readyState !== 4) {\r\n          return;\r\n        }\r\n\r\n        // The request errored out and we didn't get a response, this will be\r\n        // handled by onerror instead\r\n        // With one exception: request that using file: protocol, most browsers\r\n        // will return status as 0 even though it's a successful request\r\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\r\n          return;\r\n        }\r\n        // readystate handler is calling before onerror or ontimeout handlers,\r\n        // so we should call onloadend on the next 'tick'\r\n        setTimeout(onloadend);\r\n      };\r\n    }\r\n\r\n    // Handle browser request cancellation (as opposed to a manual cancellation)\r\n    request.onabort = function handleAbort() {\r\n      if (!request) {\r\n        return;\r\n      }\r\n\r\n      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, config, request));\r\n\r\n      // Clean up request\r\n      request = null;\r\n    };\r\n\r\n    // Handle low level network errors\r\n    request.onerror = function handleError() {\r\n      // Real errors are hidden from us by the browser\r\n      // onerror should only fire if it's a network error\r\n      reject(new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request));\r\n\r\n      // Clean up request\r\n      request = null;\r\n    };\r\n\r\n    // Handle timeout\r\n    request.ontimeout = function handleTimeout() {\r\n      let timeoutErrorMessage = config.timeout ? 'timeout of ' + config.timeout + 'ms exceeded' : 'timeout exceeded';\r\n      const transitional = config.transitional || transitionalDefaults;\r\n      if (config.timeoutErrorMessage) {\r\n        timeoutErrorMessage = config.timeoutErrorMessage;\r\n      }\r\n      reject(new AxiosError(\r\n        timeoutErrorMessage,\r\n        transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\r\n        config,\r\n        request));\r\n\r\n      // Clean up request\r\n      request = null;\r\n    };\r\n\r\n    // Add xsrf header\r\n    // This is only done if running in a standard browser environment.\r\n    // Specifically not if we're in a web worker, or react-native.\r\n    if (platform.isStandardBrowserEnv) {\r\n      // Add xsrf header\r\n      // regarding CVE-2023-45857 config.withCredentials condition was removed temporarily\r\n      const xsrfValue = isURLSameOrigin(fullPath) && config.xsrfCookieName && cookies.read(config.xsrfCookieName);\r\n\r\n      if (xsrfValue) {\r\n        requestHeaders.set(config.xsrfHeaderName, xsrfValue);\r\n      }\r\n    }\r\n\r\n    // Remove Content-Type if data is undefined\r\n    requestData === undefined && requestHeaders.setContentType(null);\r\n\r\n    // Add headers to the request\r\n    if ('setRequestHeader' in request) {\r\n      utils.forEach(requestHeaders.toJSON(), function setRequestHeader(val, key) {\r\n        request.setRequestHeader(key, val);\r\n      });\r\n    }\r\n\r\n    // Add withCredentials to request if needed\r\n    if (!utils.isUndefined(config.withCredentials)) {\r\n      request.withCredentials = !!config.withCredentials;\r\n    }\r\n\r\n    // Add responseType to request if needed\r\n    if (responseType && responseType !== 'json') {\r\n      request.responseType = config.responseType;\r\n    }\r\n\r\n    // Handle progress if needed\r\n    if (typeof config.onDownloadProgress === 'function') {\r\n      request.addEventListener('progress', progressEventReducer(config.onDownloadProgress, true));\r\n    }\r\n\r\n    // Not all browsers support upload events\r\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\r\n      request.upload.addEventListener('progress', progressEventReducer(config.onUploadProgress));\r\n    }\r\n\r\n    if (config.cancelToken || config.signal) {\r\n      // Handle cancellation\r\n      // eslint-disable-next-line func-names\r\n      onCanceled = cancel => {\r\n        if (!request) {\r\n          return;\r\n        }\r\n        reject(!cancel || cancel.type ? new CanceledError(null, config, request) : cancel);\r\n        request.abort();\r\n        request = null;\r\n      };\r\n\r\n      config.cancelToken && config.cancelToken.subscribe(onCanceled);\r\n      if (config.signal) {\r\n        config.signal.aborted ? onCanceled() : config.signal.addEventListener('abort', onCanceled);\r\n      }\r\n    }\r\n\r\n    const protocol = parseProtocol(fullPath);\r\n\r\n    if (protocol && platform.protocols.indexOf(protocol) === -1) {\r\n      reject(new AxiosError('Unsupported protocol ' + protocol + ':', AxiosError.ERR_BAD_REQUEST, config));\r\n      return;\r\n    }\r\n\r\n\r\n    // Send the request\r\n    request.send(requestData || null);\r\n  });\r\n}\r\n"]},"metadata":{},"sourceType":"module"}